<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="all" name="launcher">

<!-- <import file="../import_build.xml"/> -->

<!-- ************************************************
<Module> Project

Init all Parameters
***************************************************** -->
<target name="init">
   <property file="../xito.properties"/> 
   <property name="build.dir" value="${basedir}/build"/>
   <property name="classes.dir" value="${basedir}/classes"/>
   <property name="launcher.build.number" value="1.0.2"/>

   <mkdir dir="${build.dir}"/>
   <mkdir dir="${classes.dir}"/>

</target>

<!-- ************************************************
Build all Dependancies
***************************************************** -->
<target depends="init" name="dependancies">
      
   <!-- build bootstrap -->
   <ant dir="../bootstrap" target="build"/>
   
   <!-- build prefs -->
   <ant dir="../prefs" target="build"/>
   
   <!-- build bootstrap -->
   <ant dir="../jdic" target="build"/>
 
</target>

<!-- ************************************************
Compile all Source and copy Resources to classpath
***************************************************** -->
<target name="compile" depends="dependancies" description="Compile all Java Files and Copy Resources">
   <javac debug="true" deprecation="false" destdir="${classes.dir}" srcdir="src" source="1.5" target="1.5">
      <classpath>
         <pathelement location="${build.dir}/boot.jar"/>
         <pathelement location="libs/tidy.jar"/>
         <pathelement location="libs/jnlp.jar"/>
         <pathelement location="libs/jdic.jar"/>
         <pathelement location="${build.dir}/jdic/jdic.jar"/>
      </classpath>
   </javac>

   <copy todir="${classes.dir}">
       <fileset dir="src">
          <include name="**/*.html"/>
          <include name="**/*.au"/>
          <include name="**/*.gif"/>
          <include name="**/*.jpg"/>
          <include name="**/*.png"/>
          <include name="**/*.properties"/>
          <exclude name="**/*.class"/>
       </fileset>
   </copy>
</target>

<!-- ************************************************
JAR all Classes and Resources
***************************************************** -->
<target depends="init, compile" description="Creates Jars for all modules" name="jar">
   <mkdir dir="${build.dir}"/>
   <mkdir dir="${build.dir}"/>
   <mkdir dir="${build.dir}/${ant.project.name}"/>

   <!-- Launcher Jar -->
   <jar basedir="${classes.dir}" compress="true" jarfile="${build.dir}/${ant.project.name}/${ant.project.name}.jar">
       <exclude name="**/*.java"/>
       <include name="org/xito/launcher/**"/>

       <manifest>
       <attribute name="Built-By" value="${user.name}"/>
       <section name="org/xito/launcher/">
         <attribute name="Specification-Title" value="${ant.project.name}"/>
         <attribute name="Specification-Version" value="${build.number}"/>
         <attribute name="Specification-Vendor" value="xito"/>
         <attribute name="Implementation-Title" value="${ant.project.name}"/>
         <attribute name="Implementation-Version" value="${build.number}"/>
         <attribute name="Implementation-Vendor" value="xito"/>
       </section>
       </manifest>
   </jar>
   
   <antcall target="sign_jar">
       <param name="jar_file" value="${build.dir}/${ant.project.name}/${ant.project.name}.jar"/>
   </antcall>
   
</target>

<!-- ************************************************
Build Entire Project
***************************************************** -->
<target name="build" depends="jar">

   <!-- Copy all Resources -->
   <copy todir="${build.dir}/${ant.project.name}">
      <fileset dir="resources/${ant.project.name}">
         <include name="*.*"/>
      </fileset>
   </copy>
   
   <!-- Update Version number -->
   <replace file="${build.dir}/${ant.project.name}/launcher.srv" token="@version@" value="${launcher.build.number}"/>
   
   <!-- Copy libs to build dir -->
   <copy todir="${build.dir}/${ant.project.name}">
      <fileset dir="libs">
         <include name="tidy.jar"/>
         <include name="jnlp.jar"/>
      </fileset>
   </copy>
	
	<!-- sign tidy.jar -->
	<antcall target="sign_jar">
       <param name="jar_file" value="${build.dir}/${ant.project.name}/tidy.jar"/>
   </antcall>
	
	<!-- sign jnlp.jar --> 
	<antcall target="sign_jar">
       <param name="jar_file" value="${build.dir}/${ant.project.name}/jnlp.jar"/>
   </antcall>
      
   <echo message="${ant.project.name} built!"/>
</target>

<target name="all" depends="build"/>
   
<!-- ************************************************
Create Dist for this Project
***************************************************** -->
<target name="dist" depends="build_test_boot_dir" description="Creates Distribution">

   <mkdir dir="dist"/>
   <mkdir dir="dist-${launcher.build.number}"/>
   
   <copy todir="dist">
       <fileset dir="${build.dir}" includes="**/*.*"/>
       <fileset dir="resources" includes="readme.txt"/>
   </copy>

   <!-- Create zip archive of win32 dist -->
   <zip destfile="dist-${launcher.build.number}/${ant.project.name}-${launcher.build.number}.zip">
       <fileset dir="dist"/>
   </zip>

   <!-- create src zip -->
   <antcall target="dist_src"/>

   <delete dir="dist"/>
</target>

<!-- ************************************************
Create Source Distribution for this Project
***************************************************** -->
<target depends="init" description="Creates SRC Distribution" name="dist_src">

   <mkdir dir="dist-${launcher.build.number}"/>
   <!-- Create zip archive of src -->
   <zip destfile="dist-${launcher.build.number}/${ant.project.name}-${launcher.build.number}-src.zip">
       <zipfileset dir="${basedir}" prefix="${ant.project.name}">
         <include name="resources/**"/>
         <include name="src/**"/>
         <include name="build.xml"/>
       </zipfileset>
       <zipfileset dir="../prefs" prefix="prefs">
         <include name="resources/**"/>
         <include name="src/**"/>
         <include name="build.xml"/>
       </zipfileset>
       <zipfileset dir="../jdic" prefix="jdic">
         <include name="3rdPartyLib/**"/>
         <include name="resources/**"/>
         <include name="src/**"/>
         <include name="build.xml"/>
       </zipfileset>
   </zip>
</target>

<!-- ************************************************
Debug this Project
***************************************************** -->
<target depends="all" name="debug" description="Debug">
<echo message="Debug running on port:8000"/>

<java classname="org.xito.boot.Boot" failonerror="true" fork="true" maxmemory="256m">
   <arg value="-bootdir"/>
   <arg value="${build.dir}/test_boot_dir"/> 
   <classpath>
      <pathelement location="${build.dir}/boot.jar"/>
   </classpath>
   <jvmarg line="-Xnoagent -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000 -Xbootclasspath/a:${env.JAVA_HOME}/lib/tools.jar"/>
</java>
</target>

<!-- ************************************************
Test Boot Dir
***************************************************** -->
<target name="build_test_boot_dir" depends="build">

   <mkdir dir="${build.dir}/test_boot_dir"/>
   <copy todir="${build.dir}/test_boot_dir">
       <fileset dir="resources/test_exec">
           <include name="**/*.*"/>
       </fileset>
   </copy>
   
   <!-- Launcher Test -->
   <mkdir dir="${build.dir}/test_boot_dir/"/>
   <jar basedir="classes" compress="true" jarfile="${build.dir}/test_boot_dir/${ant.project.name}_test.jar">
       <exclude name="**/*.java"/>
       <include name="test/xito/launcher/**"/>
   </jar>

</target>

<!-- ************************************************
Test Local Functionality
***************************************************** -->
<target name="test_local" depends="build_test_boot_dir" description="Test Local Execution">
<java classname="org.xito.boot.Boot" failonerror="true" fork="true">
   <arg value="-bootdir"/>
   <arg value="${build.dir}/test_boot_dir"/> 
   <arg value="-local"/>
   <arg value="calc.exe"/>
   <classpath>
      <pathelement location="${build.dir}/boot.jar"/>
   </classpath>
</java>
</target>


<!-- ************************************************
Test Web Functionality
***************************************************** -->
<target name="test_web" depends="build_test_boot_dir" description="Test Web">
<java classname="org.xito.boot.Boot" failonerror="true" fork="true">
   <arg value="-bootdir"/>
   <arg value="${build.dir}/test_boot_dir"/> 
   <arg value="-web"/>
   <arg value="http://www.google.com"/>
   <classpath>
      <pathelement location="${build.dir}/boot.jar"/>
   </classpath>
</java>
</target>

<!-- ************************************************
Test Applet Functionality
***************************************************** -->
<target name="test_applet" depends="build_test_boot_dir" description="Test Applet">
<java classname="org.xito.boot.Boot" failonerror="true" fork="true">
   <arg value="-bootdir"/>
   <arg value="${build.dir}/test_boot_dir"/> 
   <arg value="-applet"/>
   <arg value="http://www.idiotsdelight.net/freecellframe.html"/>
   <!-- <arg value="file:c:/java/j2sdk1.4.2/demo/applets/Animator/example1.html"/> -->
   <!-- <arg value="http://micro.magnet.fsu.edu/primer/java/scienceopticsu/powersof10/index.html"/> -->
   <!-- <arg value="file:c:/java/j2sdk1.4.2/demo/applets/Clock/example1.html"/>-->
   <!-- <arg value="file:c:/java/jdk1.4.2/demo/applets/Clock/example1.html"/> -->
   <!-- <arg value="file:c:/java/jdk1.4.2/demo/applets/ImageMap/example1.html"/> -->
   <!-- <arg value="file:c:/java/jdk1.4.2/demo/applets/WireFrame/example1.html"/> -->
   <!-- <arg value="file:c:/java/jdk1.4.2/demo/applets/MoleculeViewer/example1.html"/> -->
   <classpath>
      <pathelement location="${build.dir}/boot.jar"/>
   </classpath>
</java>
</target>

<!-- ************************************************
Test JNLP Functionality
***************************************************** -->
<target name="test_jnlp" depends="build_test_boot_dir" description="Test JNLP">
<java classname="org.xito.boot.Boot" failonerror="true" fork="true">
   <arg value="-bootdir"/>
   <arg value="${build.dir}/test_boot_dir"/> 
   <arg value="-minmode"/>
   <arg value="-jnlp"/>
   <arg value="http://java.sun.com/products/javawebstart/apps/swingset2.jnlp"/>
   <classpath>
      <pathelement location="${build.dir}/boot.jar"/>
   </classpath>
</java>
</target>

<!-- ************************************************
Test 
***************************************************** -->
<target name="test" depends="build_test_boot_dir" description="Test">
<java classname="org.xito.boot.Boot" failonerror="true" fork="true" maxmemory="256m">
   <arg value="-bootdir"/>
   <arg value="${build.dir}/test_boot_dir"/> 
   <classpath>
      <pathelement location="${build.dir}/boot.jar"/>
   </classpath>
</java>
</target>

<!-- ************************************************
Create JavaDoc for this Project
***************************************************** -->
<target depends="init" description="Generate Javadoc for the src Tree" name="javadoc">
<delete dir="javadoc"/>
<mkdir dir="javadoc"/>
<javadoc destdir="javadoc" packagenames="org.xito.*">
    <sourcepath>
        <pathelement location="${src.dir}"/>
    </sourcepath>
</javadoc>
</target>

<!-- ************************************************
Clean this Build
***************************************************** -->
<target depends="init" description="Clean all build products." name="clean">
   <delete dir="classes"/>
   <delete dir="build"/>
   
   <!-- clean bootstrap -->
   <ant dir="../bootstrap" target="clean"/>
   
   <!-- clean prefs -->
   <ant dir="../prefs" target="clean"/>
   
   <!-- clean jdic -->
   <ant dir="../jdic" target="clean"/>

</target>

</project>
