<?xml version="1.0" encoding="UTF-8"?>
<project name="service">
    <import file="build-include.xml"/>
    <property name="jvmarg" value=""/>

    <!-- setup the service xml file in the build folder -->
    <target name="build_service" depends="jar">

        <!-- copy the service xml file -->
        <copy todir="${build}/${ant.project.name}" filtering="true">
          <fileset dir="resources/${ant.project.name}">
             <include name="*.*"/>
          </fileset>
          <filterset>
            <filter token="project.version" value="${project.version}"/>
          </filterset>

        </copy>

        <!-- copy the jar file for the project over to the service build folder -->
        <move file="${build}/${jar.name}" todir="${build}/${ant.project.name}"/>

        <antcall target="post_build_service"/>
    </target>
    
    <!-- copy service to a specified directory in todir 
    	 This can be used to copy a service. The copy.services.to property
    	 should be set to the directory where files should be copied
    	 callers from other ant build files should use the inheritAll=false attribute.
    	 Note: Services can override this target to copy additional dependant services
    -->
    <target name="copy_service">
    	<copy todir="${copy.services.to}/${ant.project.name}">
            <fileset dir="${build}/${ant.project.name}"/>
        </copy>
    </target>

    <!-- override to perform tasks after building the build_test_boot_dir -->
    <target name="post_build_service"/>

    <!-- build the test boot dir to test this service -->
    <target name="build_test_boot_dir" depends="build_service">

        <mkdir dir="${build}/test_boot_dir"/>
        <copy todir="${build}/test_boot_dir" failonerror="false">
            <fileset dir="resources/test">
                <include name="**/*.*"/>
            </fileset>
        </copy>

        <!-- copy xito bootstrap -->
        <copy tofile="${build}/boot.jar">
            <fileset dir="../bootstrap/build">
                <include name="xito-bootstrap-dev.jar"/>
            </fileset>
        </copy>

        <antcall target="post_build_test_boot_dir"/>
    </target>

    <!-- override to perform tasks after building the build_test_boot_dir -->
    <target name="post_build_test_boot_dir"/>

    <!-- override of test-->
    <target name="test" depends="build_test_boot_dir">
         <java classname="org.xito.boot.Boot" failonerror="true" fork="true">
            <arg value="-bootdir"/>
            <arg value="${build}/test_boot_dir"/>
            <jvmarg value="${jvmarg}"/>
            <classpath>
                <pathelement location="${build}/boot.jar"/>
            </classpath>
         </java>
    </target>

    <!-- override of debug-->
    <target name="debug" depends="build_test_boot_dir">
         <java classname="org.xito.boot.Boot" failonerror="true" fork="true">
            <arg value="-bootdir"/>
            <arg value="${build}/test_boot_dir"/>
            <classpath>
                <pathelement location="${build}/boot.jar"/>
            </classpath>
            <jvmarg line="${jvmarg} -Xnoagent -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000 -Xbootclasspath/a:${env.JAVA_HOME}/lib/tools.jar"/>
         </java>
    </target>

</project>
